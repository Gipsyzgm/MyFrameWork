// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: XOCommonMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace XOProto {

  /// <summary>Holder for reflection information generated from XOCommonMessage.proto</summary>
  public static partial class XOCommonMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for XOCommonMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XOCommonMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVYT0NvbW1vbk1lc3NhZ2UucHJvdG8igQEKD1N5c3RlbUNvbmZpZ0R0bxIQ",
            "CghnYW1lVGltZRgBIAMoAxIZCgxmaXJzdEdpZnRNYXgYAiABKAVIAIgBARIc",
            "Cg9hbmNob3JSZWNvcmRNYXgYAyABKAVIAYgBAUIPCg1fZmlyc3RHaWZ0TWF4",
            "QhIKEF9hbmNob3JSZWNvcmRNYXgihwIKB1VzZXJEdG8SDwoCaWQYASABKAVI",
            "AIgBARITCgZvcGVuSWQYAiABKAlIAYgBARIVCghuaWNrbmFtZRgDIAEoCUgC",
            "iAEBEhYKCWF2YXRhclVybBgEIAEoCUgDiAEBEhcKCnRpdGxlTGV2ZWwYBSAB",
            "KAVIBIgBARIVCgh3aW5Qb2ludBgGIAEoBUgFiAEBEhsKDmFjY3J1ZVdpblBv",
            "aW50GAcgASgFSAaIAQFCBQoDX2lkQgkKB19vcGVuSWRCCwoJX25pY2tuYW1l",
            "QgwKCl9hdmF0YXJVcmxCDQoLX3RpdGxlTGV2ZWxCCwoJX3dpblBvaW50QhEK",
            "D19hY2NydWVXaW5Qb2ludCKNAQoJQW5jaG9yRHRvEg8KAmlkGAEgASgFSACI",
            "AQESEwoGb3BlbklkGAIgASgJSAGIAQESFQoIbmlja25hbWUYAyABKAlIAogB",
            "ARIWCglhdmF0YXJVcmwYBCABKAlIA4gBAUIFCgNfaWRCCQoHX29wZW5JZEIL",
            "Cglfbmlja25hbWVCDAoKX2F2YXRhclVybCLBAQoLVXNlclJhbmtEdG8SEwoG",
            "dXNlcklkGAEgASgFSACIAQESEQoEcmFuaxgCIAEoBUgBiAEBEhIKBXNjb3Jl",
            "GAMgASgFSAKIAQESFQoId2luUG9pbnQYBCABKAVIA4gBARIQCgN3aW4YBSAB",
            "KAhIBIgBARIRCgRjYW1wGAYgASgFSAWIAQFCCQoHX3VzZXJJZEIHCgVfcmFu",
            "a0IICgZfc2NvcmVCCwoJX3dpblBvaW50QgYKBF93aW5CBwoFX2NhbXAikQQK",
            "EVVzZXJSYW5rRGV0YWlsRHRvEhsKBHVzZXIYASABKAsyCC5Vc2VyRHRvSACI",
            "AQESEgoFc2NvcmUYAiABKANIAYgBARIWCglzY29yZVdlZWsYAyABKANIAogB",
            "ARIXCgpzY29yZU1vbnRoGAQgASgDSAOIAQESGwoOcmFua0NoYW5nZVdlZWsY",
            "BSABKANIBIgBARIcCg9yYW5rQ2hhbmdlTW9udGgYBiABKANIBYgBARIYCgty",
            "YW5raW5nV2VlaxgHIAEoA0gGiAEBEhkKDHJhbmtpbmdNb250aBgIIAEoA0gH",
            "iAEBEhUKCHNjb3JlQWRkGAkgASgDSAiIAQESFQoIcG9pbnRBZGQYCiABKANI",
            "CYgBARIXCgpwb2ludFNoYXJlGAsgASgDSAqIAQESFwoKc2NvcmVTaGFyZRgM",
            "IAEoA0gLiAEBEhEKBGNhbXAYDSABKAVIDIgBAUIHCgVfdXNlckIICgZfc2Nv",
            "cmVCDAoKX3Njb3JlV2Vla0INCgtfc2NvcmVNb250aEIRCg9fcmFua0NoYW5n",
            "ZVdlZWtCEgoQX3JhbmtDaGFuZ2VNb250aEIOCgxfcmFua2luZ1dlZWtCDwoN",
            "X3JhbmtpbmdNb250aEILCglfc2NvcmVBZGRCCwoJX3BvaW50QWRkQg0KC19w",
            "b2ludFNoYXJlQg0KC19zY29yZVNoYXJlQgcKBV9jYW1wIp0CCglQbGF5ZXJE",
            "dG8SGwoEdXNlchgBIAEoCzIILlVzZXJEdG9IAIgBARIRCgR0eXBlGAIgASgF",
            "SAGIAQESEwoGZ2lmdElkGAMgASgJSAKIAQESEgoFY291bnQYBCABKAVIA4gB",
            "ARIUCgdjb250ZW50GAUgASgJSASIAQESFgoJZmlyc3RHaWZ0GAYgASgISAWI",
            "AQESFgoJY29zdFBvaW50GAcgASgFSAaIAQESFQoIZ2lmdF9leHAYCCABKAVI",
            "B4gBAUIHCgVfdXNlckIHCgVfdHlwZUIJCgdfZ2lmdElkQggKBl9jb3VudEIK",
            "CghfY29udGVudEIMCgpfZmlyc3RHaWZ0QgwKCl9jb3N0UG9pbnRCCwoJX2dp",
            "ZnRfZXhwInkKDUFuY2hvclJvb21EdG8SHwoGYW5jaG9yGAEgASgLMgouQW5j",
            "aG9yRHRvSACIAQESEgoFb3duZXIYAiABKAhIAYgBARITCgZzdGF0dXMYAyAB",
            "KAVIAogBAUIJCgdfYW5jaG9yQggKBl9vd25lckIJCgdfc3RhdHVzIt8BCgdS",
            "b29tRHRvEhMKBmFyZWFJZBgBIAEoBUgAiAEBEhEKBHRpbWUYAiABKANIAYgB",
            "ARIVCgh0YXJnZXRJZBgDIAEoBUgCiAEBEhgKC2dhbWVSb29tTnVtGAQgASgF",
            "SAOIAQESEwoGc3RhdHVzGAUgASgFSASIAQESHwoGYW5jaG9yGAYgASgLMgou",
            "QW5jaG9yRHRvSAWIAQFCCQoHX2FyZWFJZEIHCgVfdGltZUILCglfdGFyZ2V0",
            "SWRCDgoMX2dhbWVSb29tTnVtQgkKB19zdGF0dXNCCQoHX2FuY2hvciLkAQoM",
            "SW52aXRlTXNnRHRvEhMKBmFyZWFJZBgBIAEoBUgAiAEBEhEKBHRpbWUYAiAB",
            "KANIAYgBARIVCgh0YXJnZXRJZBgDIAEoBUgCiAEBEhgKC2dhbWVSb29tTnVt",
            "GAQgASgFSAOIAQESEwoGc3RhdHVzGAUgASgFSASIAQESHwoGYW5jaG9yGAYg",
            "ASgLMgouQW5jaG9yRHRvSAWIAQFCCQoHX2FyZWFJZEIHCgVfdGltZUILCglf",
            "dGFyZ2V0SWRCDgoMX2dhbWVSb29tTnVtQgkKB19zdGF0dXNCCQoHX2FuY2hv",
            "ciKVAQoNUGxheWVyT3BlcmF0ZRIYCgtvcGVyYXRlVHlwZRgBIAEoBUgAiAEB",
            "EhoKDW9wZXJhdGVWYWx1ZTEYAiABKAVIAYgBARIaCg1vcGVyYXRlVmFsdWUy",
            "GAMgASgFSAKIAQFCDgoMX29wZXJhdGVUeXBlQhAKDl9vcGVyYXRlVmFsdWUx",
            "QhAKDl9vcGVyYXRlVmFsdWUyQisKFGNvbS50d3gub3JpZ2luLnByb3RvQglD",
            "b21tb25EdG+qAgdYT1Byb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.SystemConfigDto), global::XOProto.SystemConfigDto.Parser, new[]{ "GameTime", "FirstGiftMax", "AnchorRecordMax" }, new[]{ "FirstGiftMax", "AnchorRecordMax" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.UserDto), global::XOProto.UserDto.Parser, new[]{ "Id", "OpenId", "Nickname", "AvatarUrl", "TitleLevel", "WinPoint", "AccrueWinPoint" }, new[]{ "Id", "OpenId", "Nickname", "AvatarUrl", "TitleLevel", "WinPoint", "AccrueWinPoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.AnchorDto), global::XOProto.AnchorDto.Parser, new[]{ "Id", "OpenId", "Nickname", "AvatarUrl" }, new[]{ "Id", "OpenId", "Nickname", "AvatarUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.UserRankDto), global::XOProto.UserRankDto.Parser, new[]{ "UserId", "Rank", "Score", "WinPoint", "Win", "Camp" }, new[]{ "UserId", "Rank", "Score", "WinPoint", "Win", "Camp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.UserRankDetailDto), global::XOProto.UserRankDetailDto.Parser, new[]{ "User", "Score", "ScoreWeek", "ScoreMonth", "RankChangeWeek", "RankChangeMonth", "RankingWeek", "RankingMonth", "ScoreAdd", "PointAdd", "PointShare", "ScoreShare", "Camp" }, new[]{ "User", "Score", "ScoreWeek", "ScoreMonth", "RankChangeWeek", "RankChangeMonth", "RankingWeek", "RankingMonth", "ScoreAdd", "PointAdd", "PointShare", "ScoreShare", "Camp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.PlayerDto), global::XOProto.PlayerDto.Parser, new[]{ "User", "Type", "GiftId", "Count", "Content", "FirstGift", "CostPoint", "GiftExp" }, new[]{ "User", "Type", "GiftId", "Count", "Content", "FirstGift", "CostPoint", "GiftExp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.AnchorRoomDto), global::XOProto.AnchorRoomDto.Parser, new[]{ "Anchor", "Owner", "Status" }, new[]{ "Anchor", "Owner", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.RoomDto), global::XOProto.RoomDto.Parser, new[]{ "AreaId", "Time", "TargetId", "GameRoomNum", "Status", "Anchor" }, new[]{ "AreaId", "Time", "TargetId", "GameRoomNum", "Status", "Anchor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.InviteMsgDto), global::XOProto.InviteMsgDto.Parser, new[]{ "AreaId", "Time", "TargetId", "GameRoomNum", "Status", "Anchor" }, new[]{ "AreaId", "Time", "TargetId", "GameRoomNum", "Status", "Anchor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XOProto.PlayerOperate), global::XOProto.PlayerOperate.Parser, new[]{ "OperateType", "OperateValue1", "OperateValue2" }, new[]{ "OperateType", "OperateValue1", "OperateValue2" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SystemConfigDto : pb::IMessage<SystemConfigDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SystemConfigDto> _parser = new pb::MessageParser<SystemConfigDto>(() => new SystemConfigDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SystemConfigDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemConfigDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemConfigDto(SystemConfigDto other) : this() {
      _hasBits0 = other._hasBits0;
      gameTime_ = other.gameTime_.Clone();
      firstGiftMax_ = other.firstGiftMax_;
      anchorRecordMax_ = other.anchorRecordMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemConfigDto Clone() {
      return new SystemConfigDto(this);
    }

    /// <summary>Field number for the "gameTime" field.</summary>
    public const int GameTimeFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_gameTime_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> gameTime_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 游戏时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> GameTime {
      get { return gameTime_; }
    }

    /// <summary>Field number for the "firstGiftMax" field.</summary>
    public const int FirstGiftMaxFieldNumber = 2;
    private int firstGiftMax_;
    /// <summary>
    /// 首次赠送礼物上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FirstGiftMax {
      get { if ((_hasBits0 & 1) != 0) { return firstGiftMax_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        firstGiftMax_ = value;
      }
    }
    /// <summary>Gets whether the "firstGiftMax" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFirstGiftMax {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "firstGiftMax" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFirstGiftMax() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "anchorRecordMax" field.</summary>
    public const int AnchorRecordMaxFieldNumber = 3;
    private int anchorRecordMax_;
    /// <summary>
    /// 今日战绩上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AnchorRecordMax {
      get { if ((_hasBits0 & 2) != 0) { return anchorRecordMax_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        anchorRecordMax_ = value;
      }
    }
    /// <summary>Gets whether the "anchorRecordMax" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnchorRecordMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "anchorRecordMax" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnchorRecordMax() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SystemConfigDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SystemConfigDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameTime_.Equals(other.gameTime_)) return false;
      if (FirstGiftMax != other.FirstGiftMax) return false;
      if (AnchorRecordMax != other.AnchorRecordMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameTime_.GetHashCode();
      if (HasFirstGiftMax) hash ^= FirstGiftMax.GetHashCode();
      if (HasAnchorRecordMax) hash ^= AnchorRecordMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameTime_.WriteTo(output, _repeated_gameTime_codec);
      if (HasFirstGiftMax) {
        output.WriteRawTag(16);
        output.WriteInt32(FirstGiftMax);
      }
      if (HasAnchorRecordMax) {
        output.WriteRawTag(24);
        output.WriteInt32(AnchorRecordMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameTime_.WriteTo(ref output, _repeated_gameTime_codec);
      if (HasFirstGiftMax) {
        output.WriteRawTag(16);
        output.WriteInt32(FirstGiftMax);
      }
      if (HasAnchorRecordMax) {
        output.WriteRawTag(24);
        output.WriteInt32(AnchorRecordMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameTime_.CalculateSize(_repeated_gameTime_codec);
      if (HasFirstGiftMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstGiftMax);
      }
      if (HasAnchorRecordMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AnchorRecordMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SystemConfigDto other) {
      if (other == null) {
        return;
      }
      gameTime_.Add(other.gameTime_);
      if (other.HasFirstGiftMax) {
        FirstGiftMax = other.FirstGiftMax;
      }
      if (other.HasAnchorRecordMax) {
        AnchorRecordMax = other.AnchorRecordMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            gameTime_.AddEntriesFrom(input, _repeated_gameTime_codec);
            break;
          }
          case 16: {
            FirstGiftMax = input.ReadInt32();
            break;
          }
          case 24: {
            AnchorRecordMax = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            gameTime_.AddEntriesFrom(ref input, _repeated_gameTime_codec);
            break;
          }
          case 16: {
            FirstGiftMax = input.ReadInt32();
            break;
          }
          case 24: {
            AnchorRecordMax = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserDto : pb::IMessage<UserDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserDto> _parser = new pb::MessageParser<UserDto>(() => new UserDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserDto(UserDto other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      openId_ = other.openId_;
      nickname_ = other.nickname_;
      avatarUrl_ = other.avatarUrl_;
      titleLevel_ = other.titleLevel_;
      winPoint_ = other.winPoint_;
      accrueWinPoint_ = other.accrueWinPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserDto Clone() {
      return new UserDto(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "openId" field.</summary>
    public const int OpenIdFieldNumber = 2;
    private string openId_;
    /// <summary>
    /// 第三方唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OpenId {
      get { return openId_ ?? ""; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "openId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpenId {
      get { return openId_ != null; }
    }
    /// <summary>Clears the value of the "openId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpenId() {
      openId_ = null;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private string nickname_;
    /// <summary>
    /// 玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? ""; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    /// <summary>Field number for the "avatarUrl" field.</summary>
    public const int AvatarUrlFieldNumber = 4;
    private string avatarUrl_;
    /// <summary>
    /// 用户头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarUrl {
      get { return avatarUrl_ ?? ""; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatarUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatarUrl {
      get { return avatarUrl_ != null; }
    }
    /// <summary>Clears the value of the "avatarUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatarUrl() {
      avatarUrl_ = null;
    }

    /// <summary>Field number for the "titleLevel" field.</summary>
    public const int TitleLevelFieldNumber = 5;
    private int titleLevel_;
    /// <summary>
    /// 称谓等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TitleLevel {
      get { if ((_hasBits0 & 2) != 0) { return titleLevel_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        titleLevel_ = value;
      }
    }
    /// <summary>Gets whether the "titleLevel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitleLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "titleLevel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitleLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "winPoint" field.</summary>
    public const int WinPointFieldNumber = 6;
    private int winPoint_;
    /// <summary>
    /// 胜点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WinPoint {
      get { if ((_hasBits0 & 4) != 0) { return winPoint_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        winPoint_ = value;
      }
    }
    /// <summary>Gets whether the "winPoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWinPoint {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "winPoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWinPoint() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "accrueWinPoint" field.</summary>
    public const int AccrueWinPointFieldNumber = 7;
    private int accrueWinPoint_;
    /// <summary>
    /// 累计胜点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccrueWinPoint {
      get { if ((_hasBits0 & 8) != 0) { return accrueWinPoint_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        accrueWinPoint_ = value;
      }
    }
    /// <summary>Gets whether the "accrueWinPoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccrueWinPoint {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "accrueWinPoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccrueWinPoint() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OpenId != other.OpenId) return false;
      if (Nickname != other.Nickname) return false;
      if (AvatarUrl != other.AvatarUrl) return false;
      if (TitleLevel != other.TitleLevel) return false;
      if (WinPoint != other.WinPoint) return false;
      if (AccrueWinPoint != other.AccrueWinPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasOpenId) hash ^= OpenId.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (HasAvatarUrl) hash ^= AvatarUrl.GetHashCode();
      if (HasTitleLevel) hash ^= TitleLevel.GetHashCode();
      if (HasWinPoint) hash ^= WinPoint.GetHashCode();
      if (HasAccrueWinPoint) hash ^= AccrueWinPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasOpenId) {
        output.WriteRawTag(18);
        output.WriteString(OpenId);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (HasAvatarUrl) {
        output.WriteRawTag(34);
        output.WriteString(AvatarUrl);
      }
      if (HasTitleLevel) {
        output.WriteRawTag(40);
        output.WriteInt32(TitleLevel);
      }
      if (HasWinPoint) {
        output.WriteRawTag(48);
        output.WriteInt32(WinPoint);
      }
      if (HasAccrueWinPoint) {
        output.WriteRawTag(56);
        output.WriteInt32(AccrueWinPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasOpenId) {
        output.WriteRawTag(18);
        output.WriteString(OpenId);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (HasAvatarUrl) {
        output.WriteRawTag(34);
        output.WriteString(AvatarUrl);
      }
      if (HasTitleLevel) {
        output.WriteRawTag(40);
        output.WriteInt32(TitleLevel);
      }
      if (HasWinPoint) {
        output.WriteRawTag(48);
        output.WriteInt32(WinPoint);
      }
      if (HasAccrueWinPoint) {
        output.WriteRawTag(56);
        output.WriteInt32(AccrueWinPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasOpenId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HasAvatarUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      if (HasTitleLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TitleLevel);
      }
      if (HasWinPoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinPoint);
      }
      if (HasAccrueWinPoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccrueWinPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserDto other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasOpenId) {
        OpenId = other.OpenId;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasAvatarUrl) {
        AvatarUrl = other.AvatarUrl;
      }
      if (other.HasTitleLevel) {
        TitleLevel = other.TitleLevel;
      }
      if (other.HasWinPoint) {
        WinPoint = other.WinPoint;
      }
      if (other.HasAccrueWinPoint) {
        AccrueWinPoint = other.AccrueWinPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            OpenId = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 40: {
            TitleLevel = input.ReadInt32();
            break;
          }
          case 48: {
            WinPoint = input.ReadInt32();
            break;
          }
          case 56: {
            AccrueWinPoint = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            OpenId = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 40: {
            TitleLevel = input.ReadInt32();
            break;
          }
          case 48: {
            WinPoint = input.ReadInt32();
            break;
          }
          case 56: {
            AccrueWinPoint = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnchorDto : pb::IMessage<AnchorDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnchorDto> _parser = new pb::MessageParser<AnchorDto>(() => new AnchorDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnchorDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorDto(AnchorDto other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      openId_ = other.openId_;
      nickname_ = other.nickname_;
      avatarUrl_ = other.avatarUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorDto Clone() {
      return new AnchorDto(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "openId" field.</summary>
    public const int OpenIdFieldNumber = 2;
    private string openId_;
    /// <summary>
    /// 第三方唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OpenId {
      get { return openId_ ?? ""; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "openId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpenId {
      get { return openId_ != null; }
    }
    /// <summary>Clears the value of the "openId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpenId() {
      openId_ = null;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private string nickname_;
    /// <summary>
    /// 玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? ""; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    /// <summary>Field number for the "avatarUrl" field.</summary>
    public const int AvatarUrlFieldNumber = 4;
    private string avatarUrl_;
    /// <summary>
    /// 用户头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarUrl {
      get { return avatarUrl_ ?? ""; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatarUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatarUrl {
      get { return avatarUrl_ != null; }
    }
    /// <summary>Clears the value of the "avatarUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatarUrl() {
      avatarUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnchorDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnchorDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OpenId != other.OpenId) return false;
      if (Nickname != other.Nickname) return false;
      if (AvatarUrl != other.AvatarUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasOpenId) hash ^= OpenId.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (HasAvatarUrl) hash ^= AvatarUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasOpenId) {
        output.WriteRawTag(18);
        output.WriteString(OpenId);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (HasAvatarUrl) {
        output.WriteRawTag(34);
        output.WriteString(AvatarUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasOpenId) {
        output.WriteRawTag(18);
        output.WriteString(OpenId);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (HasAvatarUrl) {
        output.WriteRawTag(34);
        output.WriteString(AvatarUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasOpenId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HasAvatarUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnchorDto other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasOpenId) {
        OpenId = other.OpenId;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasAvatarUrl) {
        AvatarUrl = other.AvatarUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            OpenId = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            AvatarUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            OpenId = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            AvatarUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRankDto : pb::IMessage<UserRankDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRankDto> _parser = new pb::MessageParser<UserRankDto>(() => new UserRankDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRankDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRankDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRankDto(UserRankDto other) : this() {
      _hasBits0 = other._hasBits0;
      userId_ = other.userId_;
      rank_ = other.rank_;
      score_ = other.score_;
      winPoint_ = other.winPoint_;
      win_ = other.win_;
      camp_ = other.camp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRankDto Clone() {
      return new UserRankDto(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    /// ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { if ((_hasBits0 & 1) != 0) { return userId_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        userId_ = value;
      }
    }
    /// <summary>Gets whether the "userId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "userId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 2;
    private int rank_;
    /// <summary>
    /// 排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 2) != 0) { return rank_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    /// <summary>
    /// 积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { if ((_hasBits0 & 4) != 0) { return score_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "winPoint" field.</summary>
    public const int WinPointFieldNumber = 4;
    private int winPoint_;
    /// <summary>
    /// 投入池子胜点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WinPoint {
      get { if ((_hasBits0 & 8) != 0) { return winPoint_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        winPoint_ = value;
      }
    }
    /// <summary>Gets whether the "winPoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWinPoint {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "winPoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWinPoint() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "win" field.</summary>
    public const int WinFieldNumber = 5;
    private bool win_;
    /// <summary>
    /// 是否胜方
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Win {
      get { if ((_hasBits0 & 16) != 0) { return win_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        win_ = value;
      }
    }
    /// <summary>Gets whether the "win" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWin {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "win" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWin() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 6;
    private int camp_;
    /// <summary>
    /// 阵营  0 上  1 下
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Camp {
      get { if ((_hasBits0 & 32) != 0) { return camp_; } else { return 0; } }
      set {
        _hasBits0 |= 32;
        camp_ = value;
      }
    }
    /// <summary>Gets whether the "camp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCamp {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "camp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCamp() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRankDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRankDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Rank != other.Rank) return false;
      if (Score != other.Score) return false;
      if (WinPoint != other.WinPoint) return false;
      if (Win != other.Win) return false;
      if (Camp != other.Camp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasRank) hash ^= Rank.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (HasWinPoint) hash ^= WinPoint.GetHashCode();
      if (HasWin) hash ^= Win.GetHashCode();
      if (HasCamp) hash ^= Camp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserId) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteInt32(Rank);
      }
      if (HasScore) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (HasWinPoint) {
        output.WriteRawTag(32);
        output.WriteInt32(WinPoint);
      }
      if (HasWin) {
        output.WriteRawTag(40);
        output.WriteBool(Win);
      }
      if (HasCamp) {
        output.WriteRawTag(48);
        output.WriteInt32(Camp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserId) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteInt32(Rank);
      }
      if (HasScore) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (HasWinPoint) {
        output.WriteRawTag(32);
        output.WriteInt32(WinPoint);
      }
      if (HasWin) {
        output.WriteRawTag(40);
        output.WriteBool(Win);
      }
      if (HasCamp) {
        output.WriteRawTag(48);
        output.WriteInt32(Camp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (HasWinPoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinPoint);
      }
      if (HasWin) {
        size += 1 + 1;
      }
      if (HasCamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Camp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRankDto other) {
      if (other == null) {
        return;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      if (other.HasWinPoint) {
        WinPoint = other.WinPoint;
      }
      if (other.HasWin) {
        Win = other.Win;
      }
      if (other.HasCamp) {
        Camp = other.Camp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            Rank = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            WinPoint = input.ReadInt32();
            break;
          }
          case 40: {
            Win = input.ReadBool();
            break;
          }
          case 48: {
            Camp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            Rank = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            WinPoint = input.ReadInt32();
            break;
          }
          case 40: {
            Win = input.ReadBool();
            break;
          }
          case 48: {
            Camp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRankDetailDto : pb::IMessage<UserRankDetailDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRankDetailDto> _parser = new pb::MessageParser<UserRankDetailDto>(() => new UserRankDetailDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRankDetailDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRankDetailDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRankDetailDto(UserRankDetailDto other) : this() {
      _hasBits0 = other._hasBits0;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      score_ = other.score_;
      scoreWeek_ = other.scoreWeek_;
      scoreMonth_ = other.scoreMonth_;
      rankChangeWeek_ = other.rankChangeWeek_;
      rankChangeMonth_ = other.rankChangeMonth_;
      rankingWeek_ = other.rankingWeek_;
      rankingMonth_ = other.rankingMonth_;
      scoreAdd_ = other.scoreAdd_;
      pointAdd_ = other.pointAdd_;
      pointShare_ = other.pointShare_;
      scoreShare_ = other.scoreShare_;
      camp_ = other.camp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRankDetailDto Clone() {
      return new UserRankDetailDto(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::XOProto.UserDto user_;
    /// <summary>
    ///玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::XOProto.UserDto User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private long score_;
    /// <summary>
    ///当前局总积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Score {
      get { if ((_hasBits0 & 1) != 0) { return score_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "scoreWeek" field.</summary>
    public const int ScoreWeekFieldNumber = 3;
    private long scoreWeek_;
    /// <summary>
    ///周积分 每局结束后更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ScoreWeek {
      get { if ((_hasBits0 & 2) != 0) { return scoreWeek_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        scoreWeek_ = value;
      }
    }
    /// <summary>Gets whether the "scoreWeek" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScoreWeek {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "scoreWeek" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScoreWeek() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "scoreMonth" field.</summary>
    public const int ScoreMonthFieldNumber = 4;
    private long scoreMonth_;
    /// <summary>
    ///月积分 每局结束后更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ScoreMonth {
      get { if ((_hasBits0 & 4) != 0) { return scoreMonth_; } else { return 0L; } }
      set {
        _hasBits0 |= 4;
        scoreMonth_ = value;
      }
    }
    /// <summary>Gets whether the "scoreMonth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScoreMonth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "scoreMonth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScoreMonth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rankChangeWeek" field.</summary>
    public const int RankChangeWeekFieldNumber = 5;
    private long rankChangeWeek_;
    /// <summary>
    ///上次游戏结束后名次变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RankChangeWeek {
      get { if ((_hasBits0 & 8) != 0) { return rankChangeWeek_; } else { return 0L; } }
      set {
        _hasBits0 |= 8;
        rankChangeWeek_ = value;
      }
    }
    /// <summary>Gets whether the "rankChangeWeek" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRankChangeWeek {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rankChangeWeek" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRankChangeWeek() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "rankChangeMonth" field.</summary>
    public const int RankChangeMonthFieldNumber = 6;
    private long rankChangeMonth_;
    /// <summary>
    ///上次游戏结束后名次变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RankChangeMonth {
      get { if ((_hasBits0 & 16) != 0) { return rankChangeMonth_; } else { return 0L; } }
      set {
        _hasBits0 |= 16;
        rankChangeMonth_ = value;
      }
    }
    /// <summary>Gets whether the "rankChangeMonth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRankChangeMonth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "rankChangeMonth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRankChangeMonth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "rankingWeek" field.</summary>
    public const int RankingWeekFieldNumber = 7;
    private long rankingWeek_;
    /// <summary>
    ///周榜 每局结束后更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RankingWeek {
      get { if ((_hasBits0 & 32) != 0) { return rankingWeek_; } else { return 0L; } }
      set {
        _hasBits0 |= 32;
        rankingWeek_ = value;
      }
    }
    /// <summary>Gets whether the "rankingWeek" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRankingWeek {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "rankingWeek" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRankingWeek() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "rankingMonth" field.</summary>
    public const int RankingMonthFieldNumber = 8;
    private long rankingMonth_;
    /// <summary>
    ///月榜排名 每局结束后更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RankingMonth {
      get { if ((_hasBits0 & 64) != 0) { return rankingMonth_; } else { return 0L; } }
      set {
        _hasBits0 |= 64;
        rankingMonth_ = value;
      }
    }
    /// <summary>Gets whether the "rankingMonth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRankingMonth {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "rankingMonth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRankingMonth() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "scoreAdd" field.</summary>
    public const int ScoreAddFieldNumber = 9;
    private long scoreAdd_;
    /// <summary>
    ///上次结算 积分变化数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ScoreAdd {
      get { if ((_hasBits0 & 128) != 0) { return scoreAdd_; } else { return 0L; } }
      set {
        _hasBits0 |= 128;
        scoreAdd_ = value;
      }
    }
    /// <summary>Gets whether the "scoreAdd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScoreAdd {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "scoreAdd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScoreAdd() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "pointAdd" field.</summary>
    public const int PointAddFieldNumber = 10;
    private long pointAdd_;
    /// <summary>
    ///胜点变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PointAdd {
      get { if ((_hasBits0 & 256) != 0) { return pointAdd_; } else { return 0L; } }
      set {
        _hasBits0 |= 256;
        pointAdd_ = value;
      }
    }
    /// <summary>Gets whether the "pointAdd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPointAdd {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "pointAdd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPointAdd() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "pointShare" field.</summary>
    public const int PointShareFieldNumber = 11;
    private long pointShare_;
    /// <summary>
    ///胜点池瓜分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PointShare {
      get { if ((_hasBits0 & 512) != 0) { return pointShare_; } else { return 0L; } }
      set {
        _hasBits0 |= 512;
        pointShare_ = value;
      }
    }
    /// <summary>Gets whether the "pointShare" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPointShare {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "pointShare" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPointShare() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "scoreShare" field.</summary>
    public const int ScoreShareFieldNumber = 12;
    private long scoreShare_;
    /// <summary>
    ///积分池瓜分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ScoreShare {
      get { if ((_hasBits0 & 1024) != 0) { return scoreShare_; } else { return 0L; } }
      set {
        _hasBits0 |= 1024;
        scoreShare_ = value;
      }
    }
    /// <summary>Gets whether the "scoreShare" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScoreShare {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "scoreShare" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScoreShare() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 13;
    private int camp_;
    /// <summary>
    ///阵营  0 上    1 下
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Camp {
      get { if ((_hasBits0 & 2048) != 0) { return camp_; } else { return 0; } }
      set {
        _hasBits0 |= 2048;
        camp_ = value;
      }
    }
    /// <summary>Gets whether the "camp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCamp {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "camp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCamp() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRankDetailDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRankDetailDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (Score != other.Score) return false;
      if (ScoreWeek != other.ScoreWeek) return false;
      if (ScoreMonth != other.ScoreMonth) return false;
      if (RankChangeWeek != other.RankChangeWeek) return false;
      if (RankChangeMonth != other.RankChangeMonth) return false;
      if (RankingWeek != other.RankingWeek) return false;
      if (RankingMonth != other.RankingMonth) return false;
      if (ScoreAdd != other.ScoreAdd) return false;
      if (PointAdd != other.PointAdd) return false;
      if (PointShare != other.PointShare) return false;
      if (ScoreShare != other.ScoreShare) return false;
      if (Camp != other.Camp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (HasScoreWeek) hash ^= ScoreWeek.GetHashCode();
      if (HasScoreMonth) hash ^= ScoreMonth.GetHashCode();
      if (HasRankChangeWeek) hash ^= RankChangeWeek.GetHashCode();
      if (HasRankChangeMonth) hash ^= RankChangeMonth.GetHashCode();
      if (HasRankingWeek) hash ^= RankingWeek.GetHashCode();
      if (HasRankingMonth) hash ^= RankingMonth.GetHashCode();
      if (HasScoreAdd) hash ^= ScoreAdd.GetHashCode();
      if (HasPointAdd) hash ^= PointAdd.GetHashCode();
      if (HasPointShare) hash ^= PointShare.GetHashCode();
      if (HasScoreShare) hash ^= ScoreShare.GetHashCode();
      if (HasCamp) hash ^= Camp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (HasScore) {
        output.WriteRawTag(16);
        output.WriteInt64(Score);
      }
      if (HasScoreWeek) {
        output.WriteRawTag(24);
        output.WriteInt64(ScoreWeek);
      }
      if (HasScoreMonth) {
        output.WriteRawTag(32);
        output.WriteInt64(ScoreMonth);
      }
      if (HasRankChangeWeek) {
        output.WriteRawTag(40);
        output.WriteInt64(RankChangeWeek);
      }
      if (HasRankChangeMonth) {
        output.WriteRawTag(48);
        output.WriteInt64(RankChangeMonth);
      }
      if (HasRankingWeek) {
        output.WriteRawTag(56);
        output.WriteInt64(RankingWeek);
      }
      if (HasRankingMonth) {
        output.WriteRawTag(64);
        output.WriteInt64(RankingMonth);
      }
      if (HasScoreAdd) {
        output.WriteRawTag(72);
        output.WriteInt64(ScoreAdd);
      }
      if (HasPointAdd) {
        output.WriteRawTag(80);
        output.WriteInt64(PointAdd);
      }
      if (HasPointShare) {
        output.WriteRawTag(88);
        output.WriteInt64(PointShare);
      }
      if (HasScoreShare) {
        output.WriteRawTag(96);
        output.WriteInt64(ScoreShare);
      }
      if (HasCamp) {
        output.WriteRawTag(104);
        output.WriteInt32(Camp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (HasScore) {
        output.WriteRawTag(16);
        output.WriteInt64(Score);
      }
      if (HasScoreWeek) {
        output.WriteRawTag(24);
        output.WriteInt64(ScoreWeek);
      }
      if (HasScoreMonth) {
        output.WriteRawTag(32);
        output.WriteInt64(ScoreMonth);
      }
      if (HasRankChangeWeek) {
        output.WriteRawTag(40);
        output.WriteInt64(RankChangeWeek);
      }
      if (HasRankChangeMonth) {
        output.WriteRawTag(48);
        output.WriteInt64(RankChangeMonth);
      }
      if (HasRankingWeek) {
        output.WriteRawTag(56);
        output.WriteInt64(RankingWeek);
      }
      if (HasRankingMonth) {
        output.WriteRawTag(64);
        output.WriteInt64(RankingMonth);
      }
      if (HasScoreAdd) {
        output.WriteRawTag(72);
        output.WriteInt64(ScoreAdd);
      }
      if (HasPointAdd) {
        output.WriteRawTag(80);
        output.WriteInt64(PointAdd);
      }
      if (HasPointShare) {
        output.WriteRawTag(88);
        output.WriteInt64(PointShare);
      }
      if (HasScoreShare) {
        output.WriteRawTag(96);
        output.WriteInt64(ScoreShare);
      }
      if (HasCamp) {
        output.WriteRawTag(104);
        output.WriteInt32(Camp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (HasScoreWeek) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScoreWeek);
      }
      if (HasScoreMonth) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScoreMonth);
      }
      if (HasRankChangeWeek) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RankChangeWeek);
      }
      if (HasRankChangeMonth) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RankChangeMonth);
      }
      if (HasRankingWeek) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RankingWeek);
      }
      if (HasRankingMonth) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RankingMonth);
      }
      if (HasScoreAdd) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScoreAdd);
      }
      if (HasPointAdd) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PointAdd);
      }
      if (HasPointShare) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PointShare);
      }
      if (HasScoreShare) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScoreShare);
      }
      if (HasCamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Camp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRankDetailDto other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::XOProto.UserDto();
        }
        User.MergeFrom(other.User);
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      if (other.HasScoreWeek) {
        ScoreWeek = other.ScoreWeek;
      }
      if (other.HasScoreMonth) {
        ScoreMonth = other.ScoreMonth;
      }
      if (other.HasRankChangeWeek) {
        RankChangeWeek = other.RankChangeWeek;
      }
      if (other.HasRankChangeMonth) {
        RankChangeMonth = other.RankChangeMonth;
      }
      if (other.HasRankingWeek) {
        RankingWeek = other.RankingWeek;
      }
      if (other.HasRankingMonth) {
        RankingMonth = other.RankingMonth;
      }
      if (other.HasScoreAdd) {
        ScoreAdd = other.ScoreAdd;
      }
      if (other.HasPointAdd) {
        PointAdd = other.PointAdd;
      }
      if (other.HasPointShare) {
        PointShare = other.PointShare;
      }
      if (other.HasScoreShare) {
        ScoreShare = other.ScoreShare;
      }
      if (other.HasCamp) {
        Camp = other.Camp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::XOProto.UserDto();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Score = input.ReadInt64();
            break;
          }
          case 24: {
            ScoreWeek = input.ReadInt64();
            break;
          }
          case 32: {
            ScoreMonth = input.ReadInt64();
            break;
          }
          case 40: {
            RankChangeWeek = input.ReadInt64();
            break;
          }
          case 48: {
            RankChangeMonth = input.ReadInt64();
            break;
          }
          case 56: {
            RankingWeek = input.ReadInt64();
            break;
          }
          case 64: {
            RankingMonth = input.ReadInt64();
            break;
          }
          case 72: {
            ScoreAdd = input.ReadInt64();
            break;
          }
          case 80: {
            PointAdd = input.ReadInt64();
            break;
          }
          case 88: {
            PointShare = input.ReadInt64();
            break;
          }
          case 96: {
            ScoreShare = input.ReadInt64();
            break;
          }
          case 104: {
            Camp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::XOProto.UserDto();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Score = input.ReadInt64();
            break;
          }
          case 24: {
            ScoreWeek = input.ReadInt64();
            break;
          }
          case 32: {
            ScoreMonth = input.ReadInt64();
            break;
          }
          case 40: {
            RankChangeWeek = input.ReadInt64();
            break;
          }
          case 48: {
            RankChangeMonth = input.ReadInt64();
            break;
          }
          case 56: {
            RankingWeek = input.ReadInt64();
            break;
          }
          case 64: {
            RankingMonth = input.ReadInt64();
            break;
          }
          case 72: {
            ScoreAdd = input.ReadInt64();
            break;
          }
          case 80: {
            PointAdd = input.ReadInt64();
            break;
          }
          case 88: {
            PointShare = input.ReadInt64();
            break;
          }
          case 96: {
            ScoreShare = input.ReadInt64();
            break;
          }
          case 104: {
            Camp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerDto : pb::IMessage<PlayerDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerDto> _parser = new pb::MessageParser<PlayerDto>(() => new PlayerDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDto(PlayerDto other) : this() {
      _hasBits0 = other._hasBits0;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      type_ = other.type_;
      giftId_ = other.giftId_;
      count_ = other.count_;
      content_ = other.content_;
      firstGift_ = other.firstGift_;
      costPoint_ = other.costPoint_;
      giftExp_ = other.giftExp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDto Clone() {
      return new PlayerDto(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::XOProto.UserDto user_;
    /// <summary>
    /// 玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::XOProto.UserDto User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    /// <summary>
    /// 类型 0:选边  1:评论  2:礼物  3:点赞  4:粉丝团
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "giftId" field.</summary>
    public const int GiftIdFieldNumber = 3;
    private string giftId_;
    /// <summary>
    /// 抖音礼物id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GiftId {
      get { return giftId_ ?? ""; }
      set {
        giftId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "giftId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGiftId {
      get { return giftId_ != null; }
    }
    /// <summary>Clears the value of the "giftId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGiftId() {
      giftId_ = null;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private int count_;
    /// <summary>
    /// 数量 type = 0 更新积分池(count = 0 不更新)  type = 1 使用道具更新玩家胜点   type = 2 礼物数量    3 点赞数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { if ((_hasBits0 & 2) != 0) { return count_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private string content_;
    /// <summary>
    /// 评论内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_ ?? ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContent() {
      content_ = null;
    }

    /// <summary>Field number for the "firstGift" field.</summary>
    public const int FirstGiftFieldNumber = 6;
    private bool firstGift_;
    /// <summary>
    /// 用户首次送礼加成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FirstGift {
      get { if ((_hasBits0 & 4) != 0) { return firstGift_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        firstGift_ = value;
      }
    }
    /// <summary>Gets whether the "firstGift" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFirstGift {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "firstGift" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFirstGift() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "costPoint" field.</summary>
    public const int CostPointFieldNumber = 7;
    private int costPoint_;
    /// <summary>
    /// type = 0 玩家加入房间注入胜点池的胜点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CostPoint {
      get { if ((_hasBits0 & 8) != 0) { return costPoint_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        costPoint_ = value;
      }
    }
    /// <summary>Gets whether the "costPoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCostPoint {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "costPoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCostPoint() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gift_exp" field.</summary>
    public const int GiftExpFieldNumber = 8;
    private int giftExp_;
    /// <summary>
    /// type = 0 继承礼物经验值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GiftExp {
      get { if ((_hasBits0 & 16) != 0) { return giftExp_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        giftExp_ = value;
      }
    }
    /// <summary>Gets whether the "gift_exp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGiftExp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gift_exp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGiftExp() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (Type != other.Type) return false;
      if (GiftId != other.GiftId) return false;
      if (Count != other.Count) return false;
      if (Content != other.Content) return false;
      if (FirstGift != other.FirstGift) return false;
      if (CostPoint != other.CostPoint) return false;
      if (GiftExp != other.GiftExp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasGiftId) hash ^= GiftId.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      if (HasFirstGift) hash ^= FirstGift.GetHashCode();
      if (HasCostPoint) hash ^= CostPoint.GetHashCode();
      if (HasGiftExp) hash ^= GiftExp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasGiftId) {
        output.WriteRawTag(26);
        output.WriteString(GiftId);
      }
      if (HasCount) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (HasContent) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (HasFirstGift) {
        output.WriteRawTag(48);
        output.WriteBool(FirstGift);
      }
      if (HasCostPoint) {
        output.WriteRawTag(56);
        output.WriteInt32(CostPoint);
      }
      if (HasGiftExp) {
        output.WriteRawTag(64);
        output.WriteInt32(GiftExp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasGiftId) {
        output.WriteRawTag(26);
        output.WriteString(GiftId);
      }
      if (HasCount) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (HasContent) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (HasFirstGift) {
        output.WriteRawTag(48);
        output.WriteBool(FirstGift);
      }
      if (HasCostPoint) {
        output.WriteRawTag(56);
        output.WriteInt32(CostPoint);
      }
      if (HasGiftExp) {
        output.WriteRawTag(64);
        output.WriteInt32(GiftExp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasGiftId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GiftId);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (HasFirstGift) {
        size += 1 + 1;
      }
      if (HasCostPoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostPoint);
      }
      if (HasGiftExp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GiftExp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerDto other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::XOProto.UserDto();
        }
        User.MergeFrom(other.User);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasGiftId) {
        GiftId = other.GiftId;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasFirstGift) {
        FirstGift = other.FirstGift;
      }
      if (other.HasCostPoint) {
        CostPoint = other.CostPoint;
      }
      if (other.HasGiftExp) {
        GiftExp = other.GiftExp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::XOProto.UserDto();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            GiftId = input.ReadString();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 48: {
            FirstGift = input.ReadBool();
            break;
          }
          case 56: {
            CostPoint = input.ReadInt32();
            break;
          }
          case 64: {
            GiftExp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::XOProto.UserDto();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            GiftId = input.ReadString();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 48: {
            FirstGift = input.ReadBool();
            break;
          }
          case 56: {
            CostPoint = input.ReadInt32();
            break;
          }
          case 64: {
            GiftExp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///匹配房间主播信息
  /// </summary>
  public sealed partial class AnchorRoomDto : pb::IMessage<AnchorRoomDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnchorRoomDto> _parser = new pb::MessageParser<AnchorRoomDto>(() => new AnchorRoomDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnchorRoomDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorRoomDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorRoomDto(AnchorRoomDto other) : this() {
      _hasBits0 = other._hasBits0;
      anchor_ = other.anchor_ != null ? other.anchor_.Clone() : null;
      owner_ = other.owner_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorRoomDto Clone() {
      return new AnchorRoomDto(this);
    }

    /// <summary>Field number for the "anchor" field.</summary>
    public const int AnchorFieldNumber = 1;
    private global::XOProto.AnchorDto anchor_;
    /// <summary>
    /// 玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::XOProto.AnchorDto Anchor {
      get { return anchor_; }
      set {
        anchor_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private bool owner_;
    /// <summary>
    /// 是否是房主
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Owner {
      get { if ((_hasBits0 & 1) != 0) { return owner_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        owner_ = value;
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwner {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwner() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private int status_;
    /// <summary>
    /// 0未准备  1准备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnchorRoomDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnchorRoomDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Anchor, other.Anchor)) return false;
      if (Owner != other.Owner) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (anchor_ != null) hash ^= Anchor.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (anchor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Anchor);
      }
      if (HasOwner) {
        output.WriteRawTag(16);
        output.WriteBool(Owner);
      }
      if (HasStatus) {
        output.WriteRawTag(24);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (anchor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Anchor);
      }
      if (HasOwner) {
        output.WriteRawTag(16);
        output.WriteBool(Owner);
      }
      if (HasStatus) {
        output.WriteRawTag(24);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (anchor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Anchor);
      }
      if (HasOwner) {
        size += 1 + 1;
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnchorRoomDto other) {
      if (other == null) {
        return;
      }
      if (other.anchor_ != null) {
        if (anchor_ == null) {
          Anchor = new global::XOProto.AnchorDto();
        }
        Anchor.MergeFrom(other.Anchor);
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (anchor_ == null) {
              Anchor = new global::XOProto.AnchorDto();
            }
            input.ReadMessage(Anchor);
            break;
          }
          case 16: {
            Owner = input.ReadBool();
            break;
          }
          case 24: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (anchor_ == null) {
              Anchor = new global::XOProto.AnchorDto();
            }
            input.ReadMessage(Anchor);
            break;
          }
          case 16: {
            Owner = input.ReadBool();
            break;
          }
          case 24: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///匹配房间主播信息
  /// </summary>
  public sealed partial class RoomDto : pb::IMessage<RoomDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomDto> _parser = new pb::MessageParser<RoomDto>(() => new RoomDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomDto(RoomDto other) : this() {
      _hasBits0 = other._hasBits0;
      areaId_ = other.areaId_;
      time_ = other.time_;
      targetId_ = other.targetId_;
      gameRoomNum_ = other.gameRoomNum_;
      status_ = other.status_;
      anchor_ = other.anchor_ != null ? other.anchor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomDto Clone() {
      return new RoomDto(this);
    }

    /// <summary>Field number for the "areaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private int areaId_;
    /// <summary>
    /// 钓场
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaId {
      get { if ((_hasBits0 & 1) != 0) { return areaId_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        areaId_ = value;
      }
    }
    /// <summary>Gets whether the "areaId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreaId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "areaId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreaId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private long time_;
    /// <summary>
    /// 游戏时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Time {
      get { if ((_hasBits0 & 2) != 0) { return time_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 3;
    private int targetId_;
    /// <summary>
    /// 游戏目标 默认 1 暂时可不传
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetId {
      get { if ((_hasBits0 & 4) != 0) { return targetId_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the "targetId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "targetId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gameRoomNum" field.</summary>
    public const int GameRoomNumFieldNumber = 4;
    private int gameRoomNum_;
    /// <summary>
    /// 匹配房间号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameRoomNum {
      get { if ((_hasBits0 & 8) != 0) { return gameRoomNum_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        gameRoomNum_ = value;
      }
    }
    /// <summary>Gets whether the "gameRoomNum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameRoomNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gameRoomNum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameRoomNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private int status_;
    /// <summary>
    /// 0:可加入  1:满员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 16) != 0) { return status_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "anchor" field.</summary>
    public const int AnchorFieldNumber = 6;
    private global::XOProto.AnchorDto anchor_;
    /// <summary>
    /// 房主
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::XOProto.AnchorDto Anchor {
      get { return anchor_; }
      set {
        anchor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if (Time != other.Time) return false;
      if (TargetId != other.TargetId) return false;
      if (GameRoomNum != other.GameRoomNum) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Anchor, other.Anchor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAreaId) hash ^= AreaId.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (HasGameRoomNum) hash ^= GameRoomNum.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (anchor_ != null) hash ^= Anchor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAreaId) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (HasTime) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (HasTargetId) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetId);
      }
      if (HasGameRoomNum) {
        output.WriteRawTag(32);
        output.WriteInt32(GameRoomNum);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      if (anchor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Anchor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAreaId) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (HasTime) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (HasTargetId) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetId);
      }
      if (HasGameRoomNum) {
        output.WriteRawTag(32);
        output.WriteInt32(GameRoomNum);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      if (anchor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Anchor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAreaId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (HasGameRoomNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameRoomNum);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (anchor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Anchor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomDto other) {
      if (other == null) {
        return;
      }
      if (other.HasAreaId) {
        AreaId = other.AreaId;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasTargetId) {
        TargetId = other.TargetId;
      }
      if (other.HasGameRoomNum) {
        GameRoomNum = other.GameRoomNum;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.anchor_ != null) {
        if (anchor_ == null) {
          Anchor = new global::XOProto.AnchorDto();
        }
        Anchor.MergeFrom(other.Anchor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
          case 24: {
            TargetId = input.ReadInt32();
            break;
          }
          case 32: {
            GameRoomNum = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 50: {
            if (anchor_ == null) {
              Anchor = new global::XOProto.AnchorDto();
            }
            input.ReadMessage(Anchor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
          case 24: {
            TargetId = input.ReadInt32();
            break;
          }
          case 32: {
            GameRoomNum = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 50: {
            if (anchor_ == null) {
              Anchor = new global::XOProto.AnchorDto();
            }
            input.ReadMessage(Anchor);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///邀请信息
  /// </summary>
  public sealed partial class InviteMsgDto : pb::IMessage<InviteMsgDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InviteMsgDto> _parser = new pb::MessageParser<InviteMsgDto>(() => new InviteMsgDto());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InviteMsgDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InviteMsgDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InviteMsgDto(InviteMsgDto other) : this() {
      _hasBits0 = other._hasBits0;
      areaId_ = other.areaId_;
      time_ = other.time_;
      targetId_ = other.targetId_;
      gameRoomNum_ = other.gameRoomNum_;
      status_ = other.status_;
      anchor_ = other.anchor_ != null ? other.anchor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InviteMsgDto Clone() {
      return new InviteMsgDto(this);
    }

    /// <summary>Field number for the "areaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private int areaId_;
    /// <summary>
    /// 钓场
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaId {
      get { if ((_hasBits0 & 1) != 0) { return areaId_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        areaId_ = value;
      }
    }
    /// <summary>Gets whether the "areaId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreaId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "areaId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreaId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private long time_;
    /// <summary>
    /// 游戏时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Time {
      get { if ((_hasBits0 & 2) != 0) { return time_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 3;
    private int targetId_;
    /// <summary>
    /// 游戏目标 默认 1 暂时可不传
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetId {
      get { if ((_hasBits0 & 4) != 0) { return targetId_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the "targetId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "targetId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gameRoomNum" field.</summary>
    public const int GameRoomNumFieldNumber = 4;
    private int gameRoomNum_;
    /// <summary>
    /// 匹配房间号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameRoomNum {
      get { if ((_hasBits0 & 8) != 0) { return gameRoomNum_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        gameRoomNum_ = value;
      }
    }
    /// <summary>Gets whether the "gameRoomNum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameRoomNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gameRoomNum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameRoomNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private int status_;
    /// <summary>
    /// 0:正常  1:过期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 16) != 0) { return status_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "anchor" field.</summary>
    public const int AnchorFieldNumber = 6;
    private global::XOProto.AnchorDto anchor_;
    /// <summary>
    /// 房主
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::XOProto.AnchorDto Anchor {
      get { return anchor_; }
      set {
        anchor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InviteMsgDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InviteMsgDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if (Time != other.Time) return false;
      if (TargetId != other.TargetId) return false;
      if (GameRoomNum != other.GameRoomNum) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Anchor, other.Anchor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAreaId) hash ^= AreaId.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (HasGameRoomNum) hash ^= GameRoomNum.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (anchor_ != null) hash ^= Anchor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAreaId) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (HasTime) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (HasTargetId) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetId);
      }
      if (HasGameRoomNum) {
        output.WriteRawTag(32);
        output.WriteInt32(GameRoomNum);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      if (anchor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Anchor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAreaId) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (HasTime) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (HasTargetId) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetId);
      }
      if (HasGameRoomNum) {
        output.WriteRawTag(32);
        output.WriteInt32(GameRoomNum);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      if (anchor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Anchor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAreaId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (HasGameRoomNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameRoomNum);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (anchor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Anchor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InviteMsgDto other) {
      if (other == null) {
        return;
      }
      if (other.HasAreaId) {
        AreaId = other.AreaId;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasTargetId) {
        TargetId = other.TargetId;
      }
      if (other.HasGameRoomNum) {
        GameRoomNum = other.GameRoomNum;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.anchor_ != null) {
        if (anchor_ == null) {
          Anchor = new global::XOProto.AnchorDto();
        }
        Anchor.MergeFrom(other.Anchor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
          case 24: {
            TargetId = input.ReadInt32();
            break;
          }
          case 32: {
            GameRoomNum = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 50: {
            if (anchor_ == null) {
              Anchor = new global::XOProto.AnchorDto();
            }
            input.ReadMessage(Anchor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
          case 24: {
            TargetId = input.ReadInt32();
            break;
          }
          case 32: {
            GameRoomNum = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 50: {
            if (anchor_ == null) {
              Anchor = new global::XOProto.AnchorDto();
            }
            input.ReadMessage(Anchor);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家操作
  /// </summary>
  public sealed partial class PlayerOperate : pb::IMessage<PlayerOperate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerOperate> _parser = new pb::MessageParser<PlayerOperate>(() => new PlayerOperate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerOperate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XOProto.XOCommonMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOperate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOperate(PlayerOperate other) : this() {
      _hasBits0 = other._hasBits0;
      operateType_ = other.operateType_;
      operateValue1_ = other.operateValue1_;
      operateValue2_ = other.operateValue2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerOperate Clone() {
      return new PlayerOperate(this);
    }

    /// <summary>Field number for the "operateType" field.</summary>
    public const int OperateTypeFieldNumber = 1;
    private int operateType_;
    /// <summary>
    ///操作类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperateType {
      get { if ((_hasBits0 & 1) != 0) { return operateType_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        operateType_ = value;
      }
    }
    /// <summary>Gets whether the "operateType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperateType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "operateType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperateType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "operateValue1" field.</summary>
    public const int OperateValue1FieldNumber = 2;
    private int operateValue1_;
    /// <summary>
    ///操作值1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperateValue1 {
      get { if ((_hasBits0 & 2) != 0) { return operateValue1_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        operateValue1_ = value;
      }
    }
    /// <summary>Gets whether the "operateValue1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperateValue1 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "operateValue1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperateValue1() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "operateValue2" field.</summary>
    public const int OperateValue2FieldNumber = 3;
    private int operateValue2_;
    /// <summary>
    ///操作值2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperateValue2 {
      get { if ((_hasBits0 & 4) != 0) { return operateValue2_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        operateValue2_ = value;
      }
    }
    /// <summary>Gets whether the "operateValue2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperateValue2 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "operateValue2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperateValue2() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerOperate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerOperate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperateType != other.OperateType) return false;
      if (OperateValue1 != other.OperateValue1) return false;
      if (OperateValue2 != other.OperateValue2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOperateType) hash ^= OperateType.GetHashCode();
      if (HasOperateValue1) hash ^= OperateValue1.GetHashCode();
      if (HasOperateValue2) hash ^= OperateValue2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOperateType) {
        output.WriteRawTag(8);
        output.WriteInt32(OperateType);
      }
      if (HasOperateValue1) {
        output.WriteRawTag(16);
        output.WriteInt32(OperateValue1);
      }
      if (HasOperateValue2) {
        output.WriteRawTag(24);
        output.WriteInt32(OperateValue2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOperateType) {
        output.WriteRawTag(8);
        output.WriteInt32(OperateType);
      }
      if (HasOperateValue1) {
        output.WriteRawTag(16);
        output.WriteInt32(OperateValue1);
      }
      if (HasOperateValue2) {
        output.WriteRawTag(24);
        output.WriteInt32(OperateValue2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOperateType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperateType);
      }
      if (HasOperateValue1) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperateValue1);
      }
      if (HasOperateValue2) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperateValue2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerOperate other) {
      if (other == null) {
        return;
      }
      if (other.HasOperateType) {
        OperateType = other.OperateType;
      }
      if (other.HasOperateValue1) {
        OperateValue1 = other.OperateValue1;
      }
      if (other.HasOperateValue2) {
        OperateValue2 = other.OperateValue2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperateType = input.ReadInt32();
            break;
          }
          case 16: {
            OperateValue1 = input.ReadInt32();
            break;
          }
          case 24: {
            OperateValue2 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OperateType = input.ReadInt32();
            break;
          }
          case 16: {
            OperateValue1 = input.ReadInt32();
            break;
          }
          case 24: {
            OperateValue2 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
